countrylist <- covid[,-c(1,3,4)]
datlong <- countrylist %>%
as_tibble() %>% #change to tibble for better printing later
pivot_longer(-Country.Region) %>%
mutate(Date=mdy(str_sub(name, 2))) #convert to a date so it is numeric and easier to plot
datlong %>%
ggplot(aes(x=Date, y=value)) + #use Date and value columns in datlong
geom_col()
+ geom_line()
datlong <- countrylist %>%
as_tibble() %>% #change to tibble for better printing later
pivot_longer(-Country.Region) %>%
mutate(Date=mdy(str_sub(name, 2))) #convert to a date so it is numeric and easier to plot
datlong %>%
+ filter(Country.Region %in% c("China", "France", "Korea, South")) %>%
+ ggplot(aes(x=Date, y=value, group=Country.Region, color=Country.Region))
covid <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
covid <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
countrylist <- covid[,-c(1,3,4)]
datlong <- countrylist %>%
as_tibble() %>% #change to tibble for better printing later
pivot_longer(-Country.Region) %>%
mutate(Date=mdy(str_sub(name, 2))) #convert to a date so it is numeric and easier to plot
datlong %>%
+ filter(Country.Region %in% c("China", "France", "Korea, South")) %>%
+ ggplot(aes(x=Date, y=value, group=Country.Region, color=Country.Region))
View(countrylist)
datlong %>%
+ filter(Country.Region %in% c("China", "France", "Burma")) %>%
+ ggplot(aes(x=Date, y=value, group=Country.Region, color=Country.Region))
countrylist <- covid[,-c(1,3,4)]
datlong <- countrylist %>%
as_tibble() %>% #change to tibble for better printing later
pivot_longer(-Country.Region) %>%
mutate(Date=mdy(str_sub(name, 2))) #convert to a date so it is numeric and easier to plot
datlong %>%
+ filter(Country.Region %in% c("China", "France", "Burma")) %>%
+ ggplot(aes(x=Date, y=value, group=Country.Region, color=Country.Region))
datlong %>%
filter(Country.Region=="China") %>% #select only records from China
ggplot(aes(x=Date, y=value)) + #use Date and value columns in datlong
geom_col()
datlong %>%
filter(Country.Region %in% c("China", "France", "Korea, South")) %>% #select only records from China
ggplot(aes(x=Date, y=value, group=Country.Region, color=Country.Region)) + #use Date and value columns in datlong
geom_col()
datlong %>%
filter(Country.Region %in% c("China", "France", "Korea, South")) %>% #select only records from China
ggplot(aes(x=Date, y=value, group=Country.Region, color=Country.Region)) + #use Date and value columns in datlong
geom_line()
covid <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
countrylist <- covid[,-c(1,3,4)]
#head(names(major))
#tail(names(major))
datlong <- countrylist %>%
as_tibble() %>% #change to tibble for better printing later
pivot_longer(-Country.Region) %>%
mutate(Date=mdy(str_sub(name, 2))) #convert to a date so it is numeric and easier to plot
datlong %>%
filter(Country.Region %in% c("China", "France", "Korea, South")) %>% #select only records from China
ggplot(aes(x=Date, y=value, group=Country.Region, color=Country.Region)) + #use Date and value columns in datlong
geom_line()
?ggplot
datlong %>%
filter(Country.Region %in% c("China", "France", "Korea, South")) %>% #select only records from China
ggplot(aes(x=Date, y=value, group=Country.Region)) + #use Date and value columns in datlong
geom_line()
datlong <- countrylist %>%
as_tibble() %>% #change to tibble for better printing later
pivot_longer(-Country.Region) %>%
mutate(Date=mdy(str_sub(name, 2))) #convert to a date so it is numeric and easier to plot
datlong %>%
filter(Country.Region %in% c("China", "France", "Korea, South")) %>% #select only records from China
ggplot(aes(x=Date, y=value, group=Country.Region, color=Country.Region)) + #use Date and value columns in datlong
geom_line()
datlong %>%
filter(Country.Region %in% c("China", "France", "Korea, South")) %>% #select only records from China
ggplot(aes(x=Date, y=value)) + #use Date and value columns in datlong
geom_line()
datlong %>%
filter(Country.Region %in% c("China", "France", "Korea, South")) %>% #select only records from China
ggplot(aes(x=Date, y=value)) + #use Date and value columns in datlong
geom_line(aes(group = group, color = group), size = 2)
?geom_line
datlong %>%
filter(Country.Region %in% c("China", "France", "Korea, South")) %>% #select only records from China
ggplot(aes(x=Date, y=value)) + #use Date and value columns in datlong
geom_line(aes(group = Country.Region, color = Country.Region), size = 2)
datlong %>%
filter(Country.Region %in% c("China", "France", "Korea, South")) %>% #select only records from China
ggplot(aes(x=Date, y=value)) #use Date and value columns in datlong
#(aes(group = Country.Region, color = Country.Region), size = 2)
+ geom_density()
datlong %>%
filter(Country.Region %in% c("China", "France", "Korea, South")) %>% #select only records from China
ggplot(aes(x=Date, y=value)) + #use Date and value columns in datlong
#(aes(group = Country.Region, color = Country.Region), size = 2)
geom_density()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(lubridate)
covid <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
countrylist <- covid[,-c(1,3,4)]
#head(names(major))
#tail(names(major))
datlong <- countrylist %>%
as_tibble() %>% #change to tibble for better printing later
pivot_longer(-Country.Region) %>%
mutate(Date=mdy(str_sub(name, 2))) #convert to a date so it is numeric and easier to plot
datlong %>%
filter(Country.Region %in% c("China", "France", "Korea, South")) %>% #select only records from China
ggplot(aes(x=Date, y=value)) + #use Date and value columns in datlong
#(aes(group = Country.Region, color = Country.Region), size = 2)
geom_density()
datlong %>%
filter(Country.Region %in% c("China", "France", "Korea, South")) %>% #select only records from China
ggplot(aes(x=Date, y=value)) + #use Date and value columns in datlong
#(aes(group = Country.Region, color = Country.Region), size = 2)
geom_line()
datlong %>%
filter(Country.Region %in% c("China", "France", "Korea, South")) %>% #select only records from China
ggplot(aes(x=Date, y=value,  group=Country.Region, color=Country.Region)) + #use Date and value columns in datlong
#(aes(group = Country.Region, color = Country.Region), size = 2)
geom_line()
datlong %>%
filter(Country.Region %in% c("China", "Korea, South")) %>% #select only records from China
ggplot(aes(x=Date, y=value,  group=Country.Region, color=Country.Region)) + #use Date and value columns in datlong
#(aes(group = Country.Region, color = Country.Region), size = 2)
geom_line()
datlong %>%
filter(Country.Region %in% c("Korea, South")) %>% #select only records from China
ggplot(aes(x=Date, y=value,  group=Country.Region, color=Country.Region)) + #use Date and value columns in datlong
#(aes(group = Country.Region, color = Country.Region), size = 2)
geom_line()
datlong %>%
filter(Country.Region %in% c("Korea, South","Burma")) %>% #select only records from China
ggplot(aes(x=Date, y=value,  group=Country.Region, color=Country.Region)) + #use Date and value columns in datlong
#(aes(group = Country.Region, color = Country.Region), size = 2)
geom_line()
?ave
?as_tibble
?ddply
?aggregate
View(datlong)
aggregate(datlong, by=datlong['Country.Region'], sum)
aggregate(datlong, by=datlong['Country.Region'], FUN = sum)
#plot
datlong %>%
filter(Country.Region %in% c("Korea, South","Burma", "China")) %>% #select only records from China
ggplot(aes(x=Date, y=value,  group=Country.Region, color=Country.Region)) + #use Date and value columns in datlong
#(aes(group = Country.Region, color = Country.Region), size = 2)
geom_line()
datlong %>%
filter(Country.Region %in% c("China")) %>% #select only records from China
ggplot(aes(x=Date, y=value,  group=Country.Region, color=Country.Region)) + #use Date and value columns in datlong
#(aes(group = Country.Region, color = Country.Region), size = 2)
geom_line()
#data manipulation
datlong <- countrylist %>%
#as_tibble() %>% #change to tibble for better printing later
pivot_longer(-Country.Region) %>%
mutate(Date=mdy(str_sub(name, 2))) #convert to a date so it is numeric and easier to plot
datlong %>%
filter(Country.Region %in% c("China")) %>% #select only records from China
ggplot(aes(x=Date, y=value,  group=Country.Region, color=Country.Region)) + #use Date and value columns in datlong
#(aes(group = Country.Region, color = Country.Region), size = 2)
geom_line()
View(datlong)
#data manipulation
datlong <- countrylist %>%
as_tibble() %>% #change to tibble for better printing later
pivot_longer(-Country.Region) %>%
mutate(Date=mdy(str_sub(name, 2))) #convert to a date so it is numeric and easier to plot
datlong %>%
filter(Country.Region %in% c("Korea, South","Burma")) %>% #select only records from China
ggplot(aes(x=Date, y=value,  group=Country.Region, color=Country.Region)) + #use Date and value columns in datlong
#(aes(group = Country.Region, color = Country.Region), size = 2)
geom_line()
View(datlong)
#data manipulation
datlong <- countrylist %>%
as_tibble() %>% #change to tibble for better printing later
pivot_longer(-Country.Region) %>%
mutate(Date=mdy(str_sub(name, 2))) #convert to a date so it is numeric and easier to plot
datlong %>%
filter(Country.Region %in% c("Korea, South","Burma")) %>% #select only records from China
ggplot(aes(x=Date, y=value,  group=Country.Region, color=Country.Region)) + #use Date and value columns in datlong
#(aes(group = Country.Region, color = Country.Region), size = 2)
geom_line()
datlong %>%
filter(Country.Region %in% c("China")) %>% #select only records from China
ggplot(aes(x=Date, y=value,  group=Country.Region, color=Country.Region)) + #use Date and value columns in datlong
#(aes(group = Country.Region, color = Country.Region), size = 2)
geom_line()
View(countrylist)
View(covid)
View(datlong)
covid <- read.csv("https://covid.ourworldindata.org/data/owid-covid-data.csv")
View(datlong)
countrylist <- covid[,c(3,4,6)]
View(countrylist)
countrylist %>%
filter(location %in% c("China")) %>% #select only records from China
ggplot(aes(x=date, y=new_cases,  group=location, color=location)) + #use Date and value columns in datlong
#(aes(group = Country.Region, color = Country.Region), size = 2)
geom_line()
View(countrylist)
?typeof
typeof(countrylist)
countrylist$date
typeof(countrylist$date)
countrylist <- transform(countrylist, x = as.Date(as.character(date), "%Y%m%d"))
View(countrylist)
countrylist <- transform(countrylist, x = as.Date(as.character(countrylist$date), "%Y%m%d"))
View(countrylist)
countrylist <- transform(countrylist, x = as.Date(as.integer(countrylist$date), "%Y%m%d"))
countrylist <- transform(countrylist, x = as.Date(countrylist$date, "%Y%m%d"))
View(countrylist)
covid <- read.csv("https://covid.ourworldindata.org/data/owid-covid-data.csv")
covid <- read.csv("https://covid.ourworldindata.org/data/owid-covid-data.csv")
countrylist <- covid[,c(3,4,6)]
covid_raw <- read.csv("https://covid.ourworldindata.org/data/owid-covid-data.csv")
covid_raw <- read.csv("https://covid.ourworldindata.org/data/owid-covid-data.csv")
countrylist <- covid[,c(3,4,6)]
covid_raw <- read.csv("https://covid.ourworldindata.org/data/owid-covid-data.csv")
countrylist <- covid_raw[,c(3,4,6)]
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(lubridate)
covid_raw <- read.csv("https://covid.ourworldindata.org/data/owid-covid-data.csv")
countrylist <- covid_raw[,c(3,4,6)]
View(covid_raw)
countrylist <- covid_raw[,c(3,4,6)]
countrylist$FixedDate <- as.Date(countrylist$date, "%m/%d/%Y")
View(countrylist)
countrylist$FixedDate <- as.Date(countrylist$date, "%Y/%M/%D")
countrylist <- covid_raw[,c(3,4,6)]
countrylist$FixedDate <- as.Date(countrylist$date, "%Y/%M/%D")
View(countrylist)
countrylist$FixedDate <- as.Date(countrylist$date)
typeof(countrylist$FixedDate)
typeof(countrylist$date)
countrylist %>%
filter(location %in% c("China")) %>% #select only records from China
ggplot(aes(x=FixedDate, y=new_cases,  group=location, color=location)) + #use Date and value columns in datlong
#(aes(group = Country.Region, color = Country.Region), size = 2)
geom_line()
countrylist %>%
filter(location %in% c("Myanmar")) %>% #select only records from China
ggplot(aes(x=FixedDate, y=new_cases,  group=location, color=location)) + #use Date and value columns in datlong
#(aes(group = Country.Region, color = Country.Region), size = 2)
geom_line()
?coord_cartesian
countrylist %>%
filter(location %in% c("China")) %>% #select only records from China
ggplot(aes(x=FixedDate, y=new_cases,  group=location, color=location)) + #use Date and value columns in datlong
#(aes(group = Country.Region, color = Country.Region), size = 2)
geom_line()
Myanmar
countrylist %>%
filter(location %in% c("Myanmar")) %>% #select only records from China
ggplot(aes(x=FixedDate, y=new_cases,  group=location, color=location)) + #use Date and value columns in datlong
#(aes(group = Country.Region, color = Country.Region), size = 2)
geom_line()
countrylist %>%
filter(location %in% c("Myanmar")) %>% #select only records from China
ggplot(aes(x=FixedDate, y=new_cases,  group=location, color=location)) + #use Date and value columns in datlong
(aes(group = Country.Region, color = Country.Region), size = 2)
countrylist %>%
filter(location %in% c("Myanmar")) %>% #select only records from China
ggplot(aes(x=FixedDate, y=new_cases,  group=location, color=location)) + #use Date and value columns in datlong
(aes(group = Country.Region, color = Country.Region), size = 2) +
countrylist %>%
filter(location %in% c("Myanmar")) %>% #select only records from China
ggplot(aes(x=FixedDate, y=new_cases,  group=location, color=location)) + #use Date and value columns in datlong
scale_x_date(date_breaks="1 week",date_labels = "%", expand=c(0,0)) +
scale_y_continuous(expand=c(0,0), labels=scales::percent) +
geom_line()
countrylist %>%
filter(location %in% c("Myanmar")) %>% #select only records from China
ggplot(aes(x=FixedDate, y=new_cases,  group=location, color=location)) + #use Date and value columns in datlong
scale_x_date(date_breaks="1 month",date_labels = "%", expand=c(0,0)) +
scale_y_continuous(expand=c(0,0), labels=scales::percent) +
geom_line()
countrylist %>%
filter(location %in% c("Myanmar")) %>% #select only records from China
ggplot(aes(x=FixedDate, y=new_cases,  group=location, color=location)) + #use Date and value columns in datlong
scale_y_continuous() +
geom_line()
countrylist %>%
filter(location %in% c("China")) %>% #select only records from China
ggplot(aes(x=FixedDate, y=new_cases,  group=location, color=location)) + #use Date and value columns in datlong
scale_y_continuous() +
geom_line()
countrylist %>%
filter(location %in% c("China", "Myanmar")) %>% #select only records from China
ggplot(aes(x=FixedDate, y=new_cases,  group=location, color=location)) + #use Date and value columns in datlong
scale_y_continuous() +
geom_line()
any(is.na(countrylist))
countrylist = countrylist[-which(is.na(countrylist))]
any(is.na(countrylist))
countrylist = countrylist[-which(is.na(countrylist))]
any(is.na(countrylist))
countrylist = countrylist[-which(is.na(countrylist))]
countrylist %>%
filter(location %in% c("China", "Myanmar")) %>% #select only records from China
ggplot(aes(x=FixedDate, y=new_cases,  group=location, color=location)) + #use Date and value columns in datlong
scale_y_continuous() +
geom_line()
countrylist <- covid_raw[,c(3,4,6)]
countrylist$FixedDate <- as.Date(countrylist$date)
countrylist %>%
filter(location %in% c("China", "Myanmar")) %>% #select only records from China
ggplot(aes(x=FixedDate, y=new_cases,  group=location, color=location)) + #use Date and value columns in datlong
scale_y_continuous() +
geom_line()
countrylist %>%
filter(location %in% c("China", "Myanmar", "Spain")) %>% #select only records from China
ggplot(aes(x=FixedDate, y=new_cases,  group=location, color=location)) + #use Date and value columns in datlong
scale_y_continuous() +
geom_line()
countrylist %>%
filter(location %in% c("Spain")) %>% #select only records from China
ggplot(aes(x=FixedDate, y=new_cases,  group=location, color=location)) + #use Date and value columns in datlong
scale_y_continuous() +
geom_line()
View(covid_raw)
View(countrylist)
View(countrylist)
View(covid_raw)
countrylist$new_cases[countrylist$new_cases < 0 ] <- 0
View(countrylist)
countrylist$FixedDate <- as.Date(countrylist$date)
countrylist$FixedDate <- as.Date(countrylist$date)
countrylist$new_cases[countrylist$new_cases < 0 ] <- 0
countrylist %>%
filter(location %in% c("Spain")) %>% #select only records from China
ggplot(aes(x=FixedDate, y=new_cases,  group=location, color=location)) + #use Date and value columns in datlong
scale_y_continuous() +
geom_line()
install.packages("zoo")
library(tidyverse)
library(zoo) # moving averages
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(zoo) # moving averages
```{r 1}
covid_raw <- read.csv("https://covid.ourworldindata.org/data/owid-covid-data.csv")
covid_raw <- read.csv("https://covid.ourworldindata.org/data/owid-covid-data.csv")
covid_raw <- read.csv("owid-covid-d
ta.csv")
#covid_raw <- read.csv("https://covid.ourworldindata.org/data/owid-covid-data.csv")
covid_raw <- read.csv("owid-covid-data.csv")
#covid_raw <- read.csv("https://covid.ourworldindata.org/data/owid-covid-data.csv")
covid_raw <- read.csv("owid-covid-data.csv")
countrylist <- covid_raw[,c(3,4,6)]
countrylist$FixedDate <- as.Date(countrylist$date)
countrylist$FixedDate <- as.Date(countrylist$date)
countrylist$new_cases[countrylist$new_cases < 0 ] <- 0
countrylist %>%
filter(location %in% c("Spain")) %>% #select only records from China
ggplot(aes(x=FixedDate, y=new_cases,  group=location, color=location)) + #use Date and value columns in datlong
scale_y_continuous() +
geom_line()
View(covid_raw)
View(countrylist)
#plot
countrylist %>%
filter(location %in% c("Spain")) %>% #select only records from countries provided
ggplot(aes(x=FixedDate, y=new_cases,  group=location, color=location)) + #use FixedDate and new_cases columns in countrylist
geom_col(alpha = 1/10)
#plot
countrylist %>%
filter(location %in% c("Spain")) %>% #select only records from countries provided
ggplot(aes(x=FixedDate, y=new_cases,  group=location, color=location)) + #use FixedDate and new_cases columns in countrylist
geom_line()
View(countrylist)
library(zoo) # moving averages
#data manipulation
#this codeblock provided by Martin Frigaard @https://www.storybench.org/how-to-calculate-a-rolling-average-in-r/
countrylist <- countrylist %>%
dplyr::arrange(desc(location)) %>%
dplyr::group_by(location) %>%
dplyr::mutate(death_03da = zoo::rollmean(new_cases, k = 3, fill = NA),
death_05da = zoo::rollmean(new_cases, k = 5, fill = NA),
death_07da = zoo::rollmean(new_cases, k = 7, fill = NA),
death_15da = zoo::rollmean(new_cases, k = 15, fill = NA),
death_21da = zoo::rollmean(new_cases, k = 21, fill = NA)) %>%
dplyr::ungroup()
View(countrylist)
#data manipulation
#this codeblock provided by Martin Frigaard @https://www.storybench.org/how-to-calculate-a-rolling-average-in-r/
countrylist <- countrylist %>%
mutate(death_03da = zoo::rollmean(new_cases, k = 3, fill = NA),
death_05da = zoo::rollmean(new_cases, k = 5, fill = NA),
death_07da = zoo::rollmean(new_cases, k = 7, fill = NA),
death_15da = zoo::rollmean(new_cases, k = 15, fill = NA),
death_21da = zoo::rollmean(new_cases, k = 21, fill = NA)) %>%
ungroup()
View(countrylist)
#plot
countrylist %>%
filter(location %in% c("Spain")) %>% #select only records from countries provided
ggplot(aes(x=FixedDate, y=death_07da,  group=location, color=location)) + #use FixedDate and death_07da columns in countrylist
geom_line()
#plot
countrylist %>%
filter(location %in% c("Spain")) %>% #select only records from countries provided
ggplot(aes(x=FixedDate, y=death_05da,  group=location, color=location)) + #use FixedDate and death_07da columns in countrylist
ggplot(aes(x=FixedDate, y=death_07da,  group=location, color=location)) + #use FixedDate and death_07da columns in countrylist
geom_line()
#plot
countrylist %>%
filter(location %in% c("Spain")) %>% #select only records from countries provided
ggplot(aes(x=FixedDate, y=death_07da,  group=location, color=location)) + #use FixedDate and death_07da columns in countrylist
geom_line()
library(hrbrthemes) # themes for graphs
install.packages("hrbrthemes")
library(hrbrthemes) # themes for graphs
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(zoo) # moving averages
library(hrbrthemes) # themes for graphs
#plot
countrylist %>%
filter(location %in% c("Spain")) %>% #select only records from countries provided
ggplot(aes(x=FixedDate, y=death_07da,  group=location, color=location)) + #use FixedDate and death_07da columns in countrylist
geom_line() +
labs(title = "South Carolina's rolling average total COVID deaths",
subtitle = "Between 2020-05-15 and 2020-06-20",
y = "Deaths",
color = "Metric",
x = "Date") +
hrbrthemes::theme_ipsum_rc()
library(hrbrthemes) # themes for graphs
#plot
countrylist %>%
filter(location %in% c("Spain")) %>% #select only records from countries provided
ggplot(aes(x=FixedDate, y=death_07da,  group=location, color=location)) + #use FixedDate and death_07da columns in countrylist
geom_line() +
labs(title = "South Carolina's rolling average total COVID deaths",
subtitle = "Between 2020-05-15 and 2020-06-20",
y = "Deaths",
color = "Metric",
x = "Date") +
hrbrthemes::theme_ipsum()
library(hrhrthemes)
library(hrbrthemes)
#plot
countrylist %>%
filter(location %in% c("Spain")) %>% #select only records from countries provided
ggplot(aes(x=FixedDate, y=death_07da,  group=location, color=location)) + #use FixedDate and death_07da columns in countrylist
geom_line() +
labs(title = "South Carolina's rolling average total COVID deaths",
subtitle = "Between 2020-05-15 and 2020-06-20",
y = "Deaths",
color = "Metric",
x = "Date") +
hrbrthemes::theme_ipsum_pub()
#plot
countrylist %>%
filter(location %in% c("Spain")) %>% #select only records from countries provided
ggplot(aes(x=FixedDate, y=death_07da,  group=location, color=location)) + #use FixedDate and death_07da columns in countrylist
geom_line() +
labs(title = "South Carolina's rolling average total COVID deaths",
subtitle = "Between 2020-05-15 and 2020-06-20",
y = "Deaths",
color = "Metric",
x = "Date") +
hrbrthemes::theme_ft_rc()
#plot
countrylist %>%
filter(location %in% c("Spain")) %>% #select only records from countries provided
ggplot(aes(x=FixedDate, y=death_07da,  group=location, color=location)) + #use FixedDate and death_07da columns in countrylist
geom_line() +
labs(title = "South Carolina's rolling average total COVID deaths",
subtitle = "Between 2020-05-15 and 2020-06-20",
y = "Deaths",
color = "Metric",
x = "Date") +
hrbrthemes::theme_ipsum_tw()
#plot
countrylist %>%
filter(location %in% c("Spain")) %>% #select only records from countries provided
ggplot(aes(x=FixedDate, y=death_07da,  group=location, color=location)) + #use FixedDate and death_07da columns in countrylist
geom_line() +
labs(title = "South Carolina's rolling average total COVID deaths",
subtitle = "Between 2020-05-15 and 2020-06-20",
y = "Deaths",
color = "Metric",
x = "Date") +
hrbrthemes::theme_ipsum()
extrafont::font_import()
View(countrylist)
View(countrylist)
library(hrbrthemes) # themes for graphs
#plot
countrylist %>%
filter(location %in% c("Spain")) %>% #select only records from countries provided
ggplot(aes(x=FixedDate, y=death_07da,  group=location, color=location)) + #use FixedDate and death_07da columns in countrylist
geom_line() +
labs(title = "South Carolina's rolling average total COVID deaths",
subtitle = "Between 2020-05-15 and 2020-06-20",
y = "Deaths",
color = "Metric",
x = "Date") +
hrbrthemes::theme_ipsum()
